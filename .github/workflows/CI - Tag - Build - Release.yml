name: Check, Tag, Build, and Release Version

on:
  push:
    branches:
      - master
  workflow_dispatch:

jobs:
  tag_version:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Java environment
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Install Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Extract version from pom.xml
        id: extract_version
        run: |
          version=$(python -c "import xml.etree.ElementTree as ET; \
                              tree = ET.parse('pom.xml'); \
                              root = tree.getroot(); \
                              ns = {'m': 'http://maven.apache.org/POM/4.0.0'}; \
                              version = root.find('m:version', ns).text; \
                              print(version)")
          echo "VERSION=$version" >> $GITHUB_ENV
          echo "Found version: $version"

      - name: Fetch all tags
        run: git fetch --tags

      - name: Prepare tag name
        id: prepare_tag
        run: |
          echo "TAG_NAME=v${{ env.VERSION }}" >> $GITHUB_ENV

      - name: Check for existing tag
        id: check_tag
        run: |
          if git rev-parse "${{ env.TAG_NAME }}" >/dev/null 2>&1; then
            echo "TAG_EXISTS=true" >> $GITHUB_ENV
          else
            echo "TAG_EXISTS=false" >> $GITHUB_ENV
          fi

      - name: Create tag if it does not exist
        id: create_tag
        run: |
          if [ "${{ env.TAG_EXISTS }}" == "false" ]; then
            git config --global user.name "github-actions[bot]"
            git config --global user.email "41898282+github-actions[bot]@users.noreply.github.com"
            git tag "${{ env.TAG_NAME }}"
            git push origin "${{ env.TAG_NAME }}"
            echo "TAG_CREATED=true" >> $GITHUB_ENV
          else
            echo "TAG_CREATED=false" >> $GITHUB_ENV
          fi
          
      - name: Interrupt workflow if tag is not created
        if: env.TAG_CREATED == 'false'
        run: |
          echo "Tag was not created, interrupting the workflow."
          exit 1

      - name: Clean Maven repository
        run: mvn clean

      - name: Build with Maven
        run: mvn clean install -DskipTests -X

      - name: Create ZIP of Default Files
        run: |
          zip -r default_files.zip default*
        shell: bash

      - name: Upload Default Config Files Zip as Artifact
        uses: actions/upload-artifact@v3
        with:
          name: default-config
          path: default_files.zip

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ env.TAG_NAME }}
          release_name: Release ${{ env.TAG_NAME }}
          draft: true
          prerelease: false

      - name: Upload JAR to Release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./target/script_control_panel-${{ env.VERSION }}.jar
          asset_name: script_control_panel.jar
          asset_content_type: application/java-archive
